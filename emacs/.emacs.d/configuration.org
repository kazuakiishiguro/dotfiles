#+TITLE: My Personal Emacs Configuration
#+AUTHOR: Kazuaki Ishiguro
#+EMAIL: kzuakiishiguro@protonmail.com

* BASIC CONFIGS

#+begin_src emacs-lisp
(eval-when-compile
  (require 'use-package))
#+end_src

** ALWAYS =:ensure t=
#+begin_src emacs-lisp
(require 'use-package-ensure)
(setq use-package-always-ensure t)
#+end_src

* LOAD =env.el=

#+begin_src emacs-lisp
 (if (file-exists-p "~/.emacs.d/.env.el")
     (load "~/.emacs.d/.env.el"))
#+end_src

* LOAD CONFIGS

#+begin_src emacs-lisp
(defun load-config (file)
  (org-babel-load-file
   (expand-file-name
    (concat user-emacs-directory file))))
#+end_src

** GENERAL

#+begin_src emacs-lisp
 (load-config "general.org")
#+end_src

** UI

#+begin_src emacs-lisp
 (load-config "ui.org")
#+end_src

** PROGRAMMING

#+begin_src emacs-lisp
 (load-config "prog.org")
#+end_src

** C
#+begin_src emacs-lisp
 (load-config "c.org")
#+end_src

** RUST
#+begin_src emacs-lisp
 (load-config "rust.org")
#+end_src

** SOLIDITY
#+begin_src emacs-lisp
 (load-config "solidity.org")
#+end_src

** PYTHON
#+begin_src emacs-lisp
 (load-config "python.org")
#+end_src

** WEB
#+begin_src emacs-lisp
 (load-config "web.org")
#+end_src

** JAVASCRIPT
#+begin_src emacs-lisp
 (load-config "javascript.org")
#+end_src

** MARKDOWN
#+begin_src emacs-lisp
 (load-config "markdown.org")
#+end_src

** ORG
#+begin_src emacs-lisp
 (load-config "org.org")
#+end_src

** GAUCHE
#+begin_src emacs-lisp
 (load-config "gauche.org")
#+end_src

** COPILOT
#+begin_src emacs-lisp
 (load-config "copilot.org")
#+end_src

** CHATGPT
#+begin_src emacs-lisp
 (load-config "chatgpt.org")
#+end_src

** GIST
#+begin_src emacs-lisp
 (load-config "gist.org")
#+end_src
